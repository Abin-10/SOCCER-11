# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.common.exceptions import NoSuchElementException, TimeoutException

class TestAdding():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
    self.wait = WebDriverWait(self.driver, 10)  # 10 seconds timeout
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_adding(self):
    # Navigate to the home page
    self.driver.get("http://localhost/Exam/index.html")
    self.driver.set_window_size(1552, 832)
    
    # Click on login button
    self.driver.find_element(By.CSS_SELECTOR, ".logbtn").click()
    
    # Wait for login form to be visible
    self.wait.until(EC.visibility_of_element_located((By.CSS_SELECTOR, "#signinForm")))
    
    # Fill in login credentials
    self.driver.find_element(By.CSS_SELECTOR, "#signinForm input[type='email']").click()
    self.driver.find_element(By.CSS_SELECTOR, "#signinForm input[type='email']").send_keys("abins851@gmail.com")
    self.driver.find_element(By.CSS_SELECTOR, "#signinForm input[type='password']").click()
    self.driver.find_element(By.CSS_SELECTOR, "#signinForm input[type='password']").send_keys("Admin123")
    
    # Submit login form
    self.driver.find_element(By.CSS_SELECTOR, "#signinForm button[type='submit']").click()
    
    # Wait for login to complete and redirect to dashboard
    time.sleep(3)  # Give time for redirect
    
    # Print current URL for debugging
    print(f"Current URL after login: {self.driver.current_url}")
    
    # Try to find and click the Turfs link
    try:
        turfs_link = self.wait.until(EC.element_to_be_clickable((By.LINK_TEXT, "Turfs")))
        turfs_link.click()
        
        # Wait for the form to load
        time.sleep(2)
        
        # Fill in the turf details
        self.driver.find_element(By.NAME, "turf_name").click()
        self.driver.find_element(By.NAME, "turf_name").send_keys("ATS")
        self.driver.find_element(By.NAME, "location").click()
        self.driver.find_element(By.NAME, "location").send_keys("Kottayam")
        self.driver.find_element(By.NAME, "morning_rate").click()
        self.driver.find_element(By.NAME, "morning_rate").send_keys("1300")
        self.driver.find_element(By.NAME, "afternoon_rate").click()
        self.driver.find_element(By.NAME, "afternoon_rate").send_keys("900")
        self.driver.find_element(By.NAME, "evening_rate").click()
        self.driver.find_element(By.NAME, "evening_rate").send_keys("1200")
        self.driver.find_element(By.NAME, "owner_id").click()
        dropdown = self.driver.find_element(By.NAME, "owner_id")
        dropdown.find_element(By.XPATH, "//option[. = 'Owner']").click()
        self.driver.find_element(By.CSS_SELECTOR, "button:nth-child(7)").click()
        
    except Exception as e:
        print(f"Error: {str(e)}")
        # Take a screenshot for debugging
        self.driver.save_screenshot("error_screenshot.png")
        raise
  
